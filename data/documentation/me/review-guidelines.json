{"sections":[],"hierarchy":{"paths":[["doc:\/\/Me\/documentation\/Me","doc:\/\/Me\/documentation\/Me\/Development"]]},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Rules","anchor":"Rules"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"All targets must be able to create a new build. Verify this automatically by checking your CI pipeline. If you don’t have it, it’s recommended to implement one."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/Me\/documentation\/Me\/Swift-Best-Practices","isActive":true,"type":"reference"},{"type":"text","text":" must match."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have found a typo, copy the sentence, paste it in the GitHub comment and mark the typo using "},{"inlineContent":[{"type":"text","text":"bold"}],"type":"strong"},{"type":"text","text":" font. This makes it easier for the reviewer to find them if is e.g. a single word. Additionally remember the PR author to enable spell checking in Xcode which helps to avoid typos in PR reviews."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"As a PR creator please never close the conversations. This should be done by the one who created the feedback\/conversation. It is similar to merging PRs which also has to be decided\/done by the reviewer and not the PR creator.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Find code duplicates and suggest alternatives.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Find code that’s hard to understand and suggest alternatives."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Find code that’s complicated (or not needed)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Find code that depends too much on other code and suggest alternatives.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Find code that can’t be replaced easily and create a ticket to resolve that problem."}]}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Me\/documentation\/Me\/Review-Guidelines"},"metadata":{"modules":[{"name":"Stefan's Development Hub"}],"roleHeading":"Article","title":"Review Guidelines","role":"article"},"variants":[{"paths":["\/documentation\/me\/review-guidelines"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Good practices for code reviews that have been battle-tested in real projects over years.","type":"text"}],"references":{"https://github.com/linkedin/swift-style-guide":{"title":"LinkedIn","identifier":"https:\/\/github.com\/linkedin\/swift-style-guide","titleInlineContent":[{"text":"LinkedIn","type":"text"}],"type":"link","url":"https:\/\/github.com\/linkedin\/swift-style-guide"},"https://github.com/Lickability/swift-best-practices":{"title":"Lickability","identifier":"https:\/\/github.com\/Lickability\/swift-best-practices","titleInlineContent":[{"text":"Lickability","type":"text"}],"type":"link","url":"https:\/\/github.com\/Lickability\/swift-best-practices"},"profile.jpg":{"alt":"A picture of the author","identifier":"profile.jpg","variants":[{"url":"\/images\/profile@2x.jpg","traits":["2x","light"]}],"type":"image"},"doc://Me/documentation/Me":{"url":"\/documentation\/me","kind":"symbol","role":"collection","type":"topic","images":[{"type":"icon","identifier":"profile.jpg"}],"abstract":[{"type":"text","text":"I’m Stefan and I’m glad you found the way to my personal development hub and"},{"type":"text","text":" "},{"type":"text","text":"portfolio. I love to create open source software, especially development"},{"type":"text","text":" "},{"type":"text","text":"tools, to help other developers to be more productive."}],"identifier":"doc:\/\/Me\/documentation\/Me","title":"Stefan's Development Hub"},"projects.png":{"alt":"A technology icon representing mobile development.","identifier":"projects.png","variants":[{"url":"\/images\/projects@2x.png","traits":["2x","light"]}],"type":"image"},"doc://Me/documentation/Me/Development":{"type":"topic","title":"Development","kind":"article","role":"collectionGroup","images":[{"identifier":"projects.png","type":"card"}],"identifier":"doc:\/\/Me\/documentation\/Me\/Development","url":"\/documentation\/me\/development","abstract":[{"type":"text","text":"Coding and review guides, interview questions, links and FAQ around (mobile) development."}]},"doc://Me/documentation/Me/Swift-Best-Practices":{"title":"Swift Best Practices","kind":"article","identifier":"doc:\/\/Me\/documentation\/Me\/Swift-Best-Practices","role":"article","type":"topic","url":"\/documentation\/me\/swift-best-practices","abstract":[{"text":"Here you can find coding guidelines which are battle tested and partially also borrowed from popular coding guidelines like ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/Lickability\/swift-best-practices","isActive":true},{"text":", ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/linkedin\/swift-style-guide","isActive":true},{"text":", etc.","type":"text"}]}}}